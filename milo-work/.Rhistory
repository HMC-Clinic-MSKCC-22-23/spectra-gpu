library(ggplot2)
library(dplyr)
library(tidyr)
factors_genes = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_gene_loadings.csv", header = FALSE) %>%
t() %>%
as.data.frame()
factors_cells = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_cell_scores.csv", header = FALSE)
factor_names = 1:80
factors_genes = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_gene_loadings.csv", header = FALSE) %>%
t() %>%
as.data.frame()
factors_cells = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_cell_scores.csv", header = FALSE)
factor_names = 1:80
colnames(factors_genes) <- factor_names
colnames(factors_cells) <- factor_names
factors_cells_tidy <- gather(factors_cells, "factor", "cell_score", factor_names, convert = TRUE)
factors_genes_tidy <- gather(factors_genes, "factor", "gene_loading", factor_names, convert = TRUE)
factors_cells_stats <- data.frame(factor = factor_names)
factors_cells_stats$variance <- with(factors_cells_tidy, tapply(cell_score, factor, var))
factors_cells_stats$mean <- with(factors_cells_tidy, tapply(cell_score, factor, mean))
factors_genes_stats <- data.frame(factor = factor_names)
factors_genes_stats$variance <- with(factors_genes_tidy, tapply(gene_loading, factor, var))
factors_genes_stats$mean <- with(factors_genes_tidy, tapply(gene_loading, factor, mean))
factors_genes_stats$sd <- with(factors_genes_tidy, tapply(gene_loading, factor, sd))
factors_genes_stats$cutoff <- 3 * factors_genes_stats$mean + 1.5 * factors_genes_stats$sd
factors_genes_stats$important_gene_count <- sapply(factor_names, function(curr_factor) {
subset(factors_genes_tidy, factor == curr_factor &
gene_loading >= factors_genes_stats$cutoff[curr_factor]) %>%
nrow()
})
for (curr_factor in 1:80) {
print(factors_genes_tidy %>%
subset(factor == curr_factor) %>%
ggplot(aes(x = 0, y = gene_loading)) +
geom_jitter(alpha = 0.6, width = 0.2) +
geom_hline(aes(yintercept = factors_genes_stats$cutoff[curr_factor])) +
labs(x = "") +
theme_bw())
}
library(ggplot2)
library(dplyr)
library(tidyr)
factors_genes = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_gene_loadings.csv", header = FALSE) %>%
t() %>%
as.data.frame()
factors_cells = read.csv("C:/Users/Brian/OneDrive/Documents/2023Spring/Clinic/milo_cell_scores.csv", header = FALSE)
factor_names = 1:80
colnames(factors_genes) <- factor_names
colnames(factors_cells) <- factor_names
factors_cells_tidy <- gather(factors_cells, "factor", "cell_score", factor_names, convert = TRUE)
factors_genes_tidy <- gather(factors_genes, "factor", "gene_loading", factor_names, convert = TRUE)
factors_cells_stats <- data.frame(factor = factor_names)
factors_cells_stats$variance <- with(factors_cells_tidy, tapply(cell_score, factor, var))
factors_cells_stats$mean <- with(factors_cells_tidy, tapply(cell_score, factor, mean))
factors_genes_stats <- data.frame(factor = factor_names)
factors_genes_stats$variance <- with(factors_genes_tidy, tapply(gene_loading, factor, var))
factors_genes_stats$mean <- with(factors_genes_tidy, tapply(gene_loading, factor, mean))
factors_genes_stats$sd <- with(factors_genes_tidy, tapply(gene_loading, factor, sd))
factors_genes_stats$cutoff <- 3 * factors_genes_stats$mean + 1.5 * factors_genes_stats$sd
factors_genes_stats$important_gene_count <- sapply(factor_names, function(curr_factor) {
subset(factors_genes_tidy, factor == curr_factor &
gene_loading >= factors_genes_stats$cutoff[curr_factor]) %>%
nrow()
})
